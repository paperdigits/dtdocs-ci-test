<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>masks on darktable 3.5 (dev) user manual</title>
    <link>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/</link>
    <description>Recent content in masks on darktable 3.5 (dev) user manual</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>overview</title>
      <link>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/overview/</guid>
      <description>Masks allow you to limit the effect of a module so that it only applies to certain parts of the image.
A mask can be regarded as a grayscale image where each pixel has a value between 0 and 1.0 (or between 0% and 100%). This value is used to determine how much a module affects each pixel.
The following sections explain how to construct masks in darktable.</description>
    </item>
    
    <item>
      <title>drawn masks</title>
      <link>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/drawn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/drawn/</guid>
      <description>With the drawn mask feature you can construct a mask by drawing shapes directly onto the image canvas. Shapes can be used alone or in combination. Once a shape has been drawn on an image it can be adjusted, removed, or reused in other modules.
Shapes are stored internally as vector graphics and are rendered with the required resolution during pixelpipe processing. Shapes are expressed in the coordinate system of the original image and are transformed along with the rest of the image by any active distorting modules in the pipe (lens correction, crop &amp;amp; rotate for example).</description>
    </item>
    
    <item>
      <title>parametric masks</title>
      <link>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/parametric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/parametric/</guid>
      <description>The parametric mask feature offers fine-grained selective control over how individual pixels are masked. It does this by automatically generating an intermediate blend mask from user-defined parameters. These parameters are color coordinates rather than the geometrical coordinates used in drawn masks.
For each data channel of a module (Lab, RGB) and several virtual data channels (e.g. hue, saturation) you can construct a per-channel opacity function. Depending on each pixel&amp;rsquo;s value for a given data channel this function calculates a blending factor between 0 and 1 (100%) for that pixel.</description>
    </item>
    
    <item>
      <title>combining drawn &amp; parametric masks</title>
      <link>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/drawn-and-parametric/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/drawn-and-parametric/</guid>
      <description>Drawn and parametric masks can be used in combination to form a single mask that can be applied to a module.
There are two main elements which control how individual masks are combined: the polarity setting of each individual mask (defined by the plus or minus buttons) and the setting in the “combine masks” combobox.
The &amp;ldquo;combine masks&amp;rdquo; combobox contains the following options, defining how the drawn and parametric masks will be combined:</description>
    </item>
    
    <item>
      <title>mask refinement &amp; additional controls</title>
      <link>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/refinement-controls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/refinement-controls/</guid>
      <description>When a parametric or drawn mask is active, several additional sliders are shown which allow the mask to be further refined.
 feathering guide Mask feathering smooths a drawn or parametric mask such that the mask&amp;rsquo;s edges automatically align with the edges of features in the image. The smoothing is guided either by the module&amp;rsquo;s input or output (before blending), depending on whether you select &amp;ldquo;input image&amp;rdquo; or &amp;ldquo;output image&amp;rdquo; in the “feathering guide” combobox.</description>
    </item>
    
    <item>
      <title>raster masks</title>
      <link>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/raster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/dtdocs/darkroom/masking-and-blending/masks/raster/</guid>
      <description>As described in the previous sections, the final output of a module&amp;rsquo;s mask (the combined effect of any drawn and parameteric masks) is a grayscale raster image representing the extent to which the module&amp;rsquo;s effect should be applied to each pixel. This raster image is stored internally for active modules and can be subsequently reused within other modules in the pixelpipe.
As with any mask, if the value for a pixel in a raster mask is zero the input to the module is passed in the module&amp;rsquo;s output unchanged.</description>
    </item>
    
  </channel>
</rss>
